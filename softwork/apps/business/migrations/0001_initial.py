# Generated by Django 3.2.9 on 2021-12-03 22:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('authme', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('LGA', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.IntegerField(blank=True, null=True)),
                ('street_name', models.CharField(blank=True, max_length=255, null=True)),
                ('building_number', models.IntegerField(blank=True, null=True)),
                ('address', models.TextField(verbose_name='Full Address')),
                ('business_gps_coordinates', models.FloatField(verbose_name='Find the exact business location')),
                ('business_is_verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=255)),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Price starting at:')),
                ('price_negotiable', models.BooleanField(default=False, verbose_name='Price is Negotiable?')),
                ('years_of_experience', models.IntegerField(verbose_name='Select you years of experience on the job')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('businessaddress_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='business.businessaddress')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='authme.user')),
                ('business_name', models.CharField(max_length=255)),
                ('business_motto', models.CharField(max_length=255)),
                ('business_description', models.TextField(blank=True, null=True)),
                ('business_logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('business_header_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('business_industry_tags', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['business_name'],
            },
            bases=('business.businessaddress',),
        ),
        migrations.CreateModel(
            name='ServiceTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.SlugField()),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_object_id', models.IntegerField()),
                ('service_content_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contenttypes.contenttype')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='business.businessprofile', verbose_name='Name of Business')),
            ],
        ),
    ]
